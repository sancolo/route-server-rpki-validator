/*
 * ROA Checks Filters  
 */

# Reject Invalid IPv4 ROAs
filter peer_in_v4 {
        if (roa_check(r4, net, bgp_path.last) = ROA_INVALID) then
        {
                print "Ignore invalid ROA ", net, " for ASN ", bgp_path.last;
                reject;
        }
        accept;
}

# Reject Invalid IPv6 ROAs
filter peer_in_v6 {
        if (roa_check(r6, net, bgp_path.last) = ROA_INVALID) then
        {
                print "Ignore invalid ROA ", net, " for ASN ", bgp_path.last;
                reject;
        }
        accept;
}

# IPv4 Add Large Community ROA Validation State
filter roa_commu_v4 {
	if (roa_check(r4, net, bgp_path.last) = ROA_VALID) then
	{
		bgp_large_community.add((64254,8282,0));
	}
	if (roa_check(r4, net, bgp_path.last) = ROA_UNKNOWN) then
	{
		bgp_large_community.add((64254,8282,1));
	}
	if (roa_check(r4, net, bgp_path.last) = ROA_INVALID) then
	{
		bgp_large_community.add((64254,8282,2));
	}
	accept;
}

# IPv6 Add Large Community ROA Validation State
filter roa_commu_v6 {
	if (roa_check(r6, net, bgp_path.last) = ROA_VALID) then
	{
		bgp_large_community.add((64254,8282,0));
	}
	if (roa_check(r6, net, bgp_path.last) = ROA_UNKNOWN) then
	{
		bgp_large_community.add((64254,8282,1));
	}
	if (roa_check(r6, net, bgp_path.last) = ROA_INVALID) then
	{
		bgp_large_community.add((64254,8282,2));
	}
	accept;
}
